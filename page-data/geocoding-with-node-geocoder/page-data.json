{"componentChunkName":"component---src-templates-post-js","path":"/geocoding-with-node-geocoder","webpackCompilationHash":"9567cb6a6a0de401fe51","result":{"data":{"site":{"siteMetadata":{"siteUrl":"https://www.nchaulet.fr"}},"mdx":{"code":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"path\": \"/geocoding-with-node-geocoder\",\n  \"date\": \"2015-01-26\",\n  \"title\": \"Geocoding in node.js with node-geocoder\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"After more than a year of developing \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"node-geocoder\"), \" library, I finally take the time to write a small article to present you this library.\"), mdx(\"p\", null, \"Node geocoder is a node.js module which provides an abstraction layer for geocoding and reverse geocoding.\"), mdx(\"h2\", null, \"Usage\"), mdx(\"p\", null, \"To install the module it's really easy : just run the following command to get the latest version:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-shell\"\n  }), \"npm install node-geocoder\\n\")), mdx(\"p\", null, \"Then you can geocode your first address :\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"// Require the module\\nvar NodeGeocoder = require('node-geocoder');\\n// Choose a geocoder provider\\nvar geocoder = NodeGeocoder.get('google');\\n\\n// Geocode\\ngeocoder.geocode('Your adress')\\n    .then(function(result) {\\n        console.log(result);\\n    });\\n\")), mdx(\"h2\", null, \"Future of node-geocoder\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"More provider: Currently this library supports 11 geocoding providers. In a near future new providers will appear.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Better error handling: I am currently refactoring error handling to be more debugable.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"A logo ?\")), mdx(\"h2\", null, \"More\"), mdx(\"p\", null, \"Node-geocoder documentation \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"http://nchaulet.github.io/node-geocoder/\"\n  }), \"http://nchaulet.github.io/node-geocoder/\")), mdx(\"p\", null, \"Github: \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/nchaulet/node-geocoder\"\n  }), \"https://github.com/nchaulet/node-geocoder\")));\n}\nMDXContent.isMDXComponent = true;"},"frontmatter":{"date":"2015-01-26","path":"/geocoding-with-node-geocoder","title":"Geocoding in node.js with node-geocoder"}}},"pageContext":{"isCreatedByStatefulCreatePages":false}}}