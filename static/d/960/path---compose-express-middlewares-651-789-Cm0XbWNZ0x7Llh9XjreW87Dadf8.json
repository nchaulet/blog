{"data":{"markdownRemark":{"html":"<p>Function composition is a great tool, to allow to create more isolated function with clear responsabilty and single purpose. Function composition allow to combine these functions to create a more complex one.</p>\n<p>This pattern can also be used for express middlewares. This allow to have more isolated middlewares, easier to test. And to distribute a final middleware that is guarenteed to contains all the required middlewares</p>\n<pre><code>const express = require('express');\n\nfunction middleware1(req, res, next) {}\nfunction middleware2(req, res, next) {}\nfunction middleware3(req, res, next) {}\n\nconst myFinalMiddleware = express.Router().use(middleware1, middleware2, middleware3);\n</code></pre>\n<p>And you can use your middleware after like any other middleware</p>\n<pre><code>const app = express();\napp.use(myFinalMiddleware);\n</code></pre>","frontmatter":{"date":"2018-10-26","path":"/compose-express-middlewares","title":"Compose express middlewares"}}},"pageContext":{}}