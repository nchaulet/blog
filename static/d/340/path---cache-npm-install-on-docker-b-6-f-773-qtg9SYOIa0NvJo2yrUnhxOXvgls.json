{"data":{"markdownRemark":{"html":"<p>Docker had a great cache mechanism, and you can easily use it to improve your image build time.</p>\n<p><img src=\"/images/2015/09/docker-node.jpeg\"></p>\n<h2>Node Application Dockerfile</h2>\n<p>You can use the below Dockerfile to run a simple nodejs application, but for every image build the command <code>npm install</code> will be executed.</p>\n<pre><code class=\"language-Dockerfile\">FROM node\n\nADD . /code\nWORKDIR /code\n\nRUN npm install\n\nCMD npm start\n</code></pre>\n<h2>Use docker layer cache</h2>\n<p>A great optimization to the previous Dockerfile is to run <code>npm install</code> before adding your codebase. For this you will have to add <code>package.json</code> and to run <code>nmp install</code>, before you add your codebase.</p>\n<pre><code class=\"language-Dockerfile\">FROM node\n\nADD ./package.json /code/package.json\nWORKDIR /code\nRUN npm install\n\nADD . /code\n\nCMD npm start\n</code></pre>\n<h3>Conclusion</h3>\n<p>Now your <code>npm install</code> are cached and will be rerunned only if your <code>package.json</code> changes, making your image build time faster.</p>","frontmatter":{"date":"2015-09-13","path":"/cache-npm-install-on-docker","title":"Cache npm install on docker"}}},"pageContext":{"isCreatedByStatefulCreatePages":false}}