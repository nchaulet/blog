{"data":{"site":{"siteMetadata":{"siteUrl":"https://www.nchaulet.fr"}},"mdx":{"code":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"path\": \"/first-impressions-github-actions\",\n  \"date\": \"2018-12-21\",\n  \"title\": \"First impressions with github actions\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"A few weeks ago Github published \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/features/actions\"\n  }), \"Github Actions\"), \". In the beginning, the feature was accessible only for private repositories, but they just released it for public ones. I wanted to give it a try and what better project than my personal blog to try new technologies, I decided to move the deployment of my blog to Github Actions.\"), mdx(\"p\", null, \"It's easy to start you have a UI where you can add basic actions like running npm scripts, but to deploy my blogs I used the npm module \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"gh-pages\"), \" that rely on having git installed on the machine, and it was not the case with the default npm Github action.\"), mdx(\"p\", null, \"I decided to implement my own action to deploy to Github pages. You just need to create a GitHub repository with a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Dockerfile\"), \" inside. When GitHub is going to execute your action the repo and results of previous actions are going to be mount in \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"/github/workspace\"), \".\"), mdx(\"p\", null, \"The result is here \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/nchaulet/github-action-gh-pages\"\n  }), \"My first github action\"), \".\"), mdx(\"p\", null, \"And this blog is now deployed using github actions (\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/nchaulet/blog/blob/master/.github/main.workflow\"\n  }), \"see workflow\"), \").\"));\n}\nMDXContent.isMDXComponent = true;"},"frontmatter":{"date":"2018-12-21","path":"/first-impressions-github-actions","title":"First impressions with github actions"}}},"pageContext":{"isCreatedByStatefulCreatePages":false}}